SELECT B.NUMBOLETA AS "NRO BOLETA", C.RUTCLIENTE AS "RUT CLIENTE", B.FECHA AS "FECHA TRANSACCIÓN", ROUND(B.TOTAL / 1.19) AS "TOTAL SIN IVA", B.TOTAL AS "TOTAL CON IVA"
FROM CLIENTE C
JOIN BOLETA B
ON C.RUTCLIENTE = B.RUTCLIENTE
WHERE C.RUTCLIENTE = '&Ingrese_rut'



--CASO 2

SELECT C.RUTCLIENTE AS RUT, C.NOMBRE AS NOMBRE, 'CLIENTE' AS TIPO, ROUND(B.TOTAL / 1.19)  AS 'COMPRADO SIN IVA'
FROM CLIENTE C
JOIN BOLETA B
ON C.RUTCLIENTE = B.RUTCLIENTE
UNION 
SELECT V.RUTVENDEDOR AS RUT, V.NOMBRE AS NOMBRE, 'VENDEDOR(A)' AS TIPO ROUND(BO.TOTAL / 1.19)  AS 'VENDIDO SIN IVA'
FROM VENDEDOR V
JOIN BOLETA BO
ON V.RUTVENDEDOR = BO.RUTVENDEDOR

--TEST 2

SELECT C.RUTCLIENTE AS RUT, C.NOMBRE AS NOMBRE, 'CLIENTE' AS TIPO, ROUND(B.TOTAL / 1.19) AS "COMPRADO SIN IVA"
FROM CLIENTE C
JOIN BOLETA B ON C.RUTCLIENTE = B.RUTCLIENTE
UNION 
SELECT V.RUTVENDEDOR AS RUT, V.NOMBRE AS NOMBRE, 'VENDEDOR(A)' AS TIPO, ROUND(DB.VUNITARIO / 1.19) AS "VENDIDO SIN IVA"
FROM VENDEDOR V
JOIN BOLETA BO ON V.RUTVENDEDOR = BO.RUTVENDEDOR
JOIN DETALLE_BOLETA DB ON DB.NUMBOLETA = BO.NUMBOLETA;

--test 3

SELECT RUT, NOMBRE, TIPO, SUM(COMPRA_SIN_IVA) AS "Total Comprado sin IVA", SUM(VENTA_SIN_IVA) AS "Total Vendido sin IVA"
FROM (
    SELECT C.RUTCLIENTE AS RUT, C.NOMBRE AS NOMBRE, 'Cliente' AS TIPO, ROUND(SUM(C.CREDITO - C.SALDO) / 1.19) AS COMPRA_SIN_IVA, 0 AS VENTA_SIN_IVA
    FROM CLIENTE C
    GROUP BY C.RUTCLIENTE, C.NOMBRE

    UNION ALL

    SELECT V.RUTVENDEDOR AS RUT, V.NOMBRE AS NOMBRE, 'Vendedor(a)' AS TIPO, 0 AS COMPRA_SIN_IVA, ROUND(SUM(BO.TOTAL) / 1.19) AS VENTA_SIN_IVA
    FROM VENDEDOR V
    JOIN BOLETA BO ON V.RUTVENDEDOR = BO.RUTVENDEDOR
    GROUP BY V.RUTVENDEDOR, V.NOMBRE
)
GROUP BY RUT, NOMBRE, TIPO
ORDER BY RUT;


-- Crear la tabla "clientes_vendedores" para almacenar los datos
CREATE TABLE clientes_vendedores (
    RUT VARCHAR(20) PRIMARY KEY,
    NOMBRE VARCHAR(255),
    TIPO VARCHAR(20),
    COMPRADO_SIN_IVA DECIMAL(10, 2),
    VENDIDO_SIN_IVA DECIMAL(10, 2)
);

-- Insertar datos en la tabla "clientes_vendedores" desde el informe
INSERT INTO clientes_vendedores (RUT, NOMBRE, TIPO, COMPRADO_SIN_IVA, VENDIDO_SIN_IVA)
SELECT C.RUTCLIENTE AS RUT, C.NOMBRE, 'Cliente' AS TIPO, COALESCE(ROUND(SUM(B.TOTAL) / 1.19, 2), 0) AS COMPRADO_SIN_IVA, 0 AS VENDIDO_SIN_IVA
FROM CLIENTE C
LEFT JOIN BOLETA B ON C.RUTCLIENTE = B.RUTCLIENTE
GROUP BY C.RUTCLIENTE, C.NOMBRE
UNION ALL
SELECT V.RUTVENDEDOR AS RUT, V.NOMBRE, 'Vendedor(a)' AS TIPO, 0 AS COMPRADO_SIN_IVA, COALESCE(ROUND(SUM(BO.TOTAL) / 1.19, 2), 0) AS VENDIDO_SIN_IVA
FROM VENDEDOR V
LEFT JOIN BOLETA BO ON V.RUTVENDEDOR = BO.RUTVENDEDOR
GROUP BY V.RUTVENDEDOR, V.NOMBRE;

-- Actualizar datos nulos a 0 en la tabla "clientes_vendedores"
UPDATE clientes_vendedores
SET COMPRADO_SIN_IVA = 0
WHERE COMPRADO_SIN_IVA IS NULL;

UPDATE clientes_vendedores
SET VENDIDO_SIN_IVA = 0
WHERE VENDIDO_SIN_IVA IS NULL;

-- Desplegar los datos ordenados por el total comprado y vendido de manera descendente
SELECT *
FROM clientes_vendedores
ORDER BY COMPRADO_SIN_IVA DESC, VENDIDO_SIN_IVA DESC;


--La primera parte consiste en generar un informe que contenga datos tanto de clientes como vendedores. Respecto de lo
--comprado por cada cliente según boleta, se espera determinar el total; de la misma manera, se espera determinar el total
--vendido según boleta por cada vendedor. Los datos que se espera mostrar son:
--● RUT del cliente o vendedor
--● Nombre del cliente o vendedor
--● Tipo (Cliente o Vendedor(a))
--● Total comprado por cada cliente sin iva
--● Total vendido por cada vendedor sin iva





SELECT NOMBRE, credito as credito, saldo as saldo, CREDITO - SALDO as resta
FROM CLIENTE
UNION
SELECT *
FROM BOLETA
